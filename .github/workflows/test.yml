name: Test
on: [push, pull_request]

jobs:
  test:
    runs-on: macOS
    steps:
    - uses: actions/checkout@v2
    - name: "[Pre] Install Requirements"
      shell: bash
      run: |
        brew install coreutils
        brew install bash
        brew install socat

    - name: "[Pre] Install Docker"
      shell: bash
      run: |
        brew install docker docker-machine-driver-xhyve
        sudo chown root:wheel $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
        sudo chmod u+s $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
        docker-machine create --driver virtualbox --virtualbox-boot2docker-url ~/.docker/machine/cache/boot2docker.iso default
        #  while ! docker-machine create --driver xhyve default; do
        #    docker-machine rm -f default
        #    sleep 1;
        #  done
        # Export variable (this target)
        eval "$(docker-machine env default)"
        DOCKER_TLS_VERIFY="$(   docker-machine env default | grep DOCKER_TLS_VERIFY   | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_HOST="$(         docker-machine env default | grep DOCKER_HOST         | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_CERT_PATH="$(    docker-machine env default | grep DOCKER_CERT_PATH    | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_MACHINE_NAME="$( docker-machine env default | grep DOCKER_MACHINE_NAME | sed -e 's/.*="//g' -e 's/"$//g' )"
        # Export variable (this other targets)
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env
        echo ::set-env name=DOCKER_TLS_VERIFY::${DOCKER_TLS_VERIFY}
        echo ::set-env name=DOCKER_HOST::${DOCKER_HOST}
        echo ::set-env name=DOCKER_CERT_PATH::${DOCKER_CERT_PATH}
        echo ::set-env name=DOCKER_MACHINE_NAME::${DOCKER_MACHINE_NAME}
        # Show info
        docker-machine ls
        docker-machine env default
        docker version

    - name: "[Pre] Install Docker Compose"
      shell: bash
      run: |
        sudo curl -L https://github.com/docker/compose/releases/download/1.25.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose version

    - name: "[Pre] Setup Docker machine"
      shell: bash
      run: |
        # Setup DNS records
        echo "127.0.0.1  localhost" | sudo tee -a /etc/hosts

        # Portforwarding from DOCKER_HOST to local
        HOST="$( echo "${DOCKER_HOST}" | sed -e 's|^tcp://||g' -e 's|:.*||g' )"
        echo "${HOST}"
        sudo socat -s -d -d tcp-listen:80,reuseaddr,fork tcp:${HOST}:80 &
        sleep 2
        sudo socat -s -d -d tcp-listen:443,reuseaddr,fork tcp:${HOST}:443 &
        sleep 2
        if ! netstat -an | grep -i LISTEN | grep -E '(:80)|(\.80)\s'; then
          netstat -an | grep -i LISTEN;
          false;
        fi
        if ! netstat -an | grep -i LISTEN | grep -E '(:443)|(\.443)\s'; then
          netstat -an | grep -i LISTEN;
          false;
        fi
        host localhost
        curl -sS -I 'http://localhost:80' || true
        curl -sS -I 'https://localhost:443' || true

    - name: Run
      run: |
        docker run -d \
        -p 2234:2234 \
        -e SSL_CERT_PATH=None \
        -e HTTP_RPC_PORT=2234 \
        -e DATA_DIR=/schain_data/data_dir \
        skalenetwork/schain:1.42-develop.11